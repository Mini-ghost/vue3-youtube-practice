{"version":3,"sources":["webpack:///./src/views/Home.vue","webpack:///./src/views/Home.vue?d5e7","webpack:///./src/views/Home.vue?ab8c"],"names":["class","ref","videos","canLoad","cachedObserver","IntersectionObserver","window","listeners","Map","createObserver","handler","entrys","forEach","rootMargin","getObserver","cb","target","intersectionRatio","get","unobserve","delete","listenToIntersections","el","observer","observe","set","components","VideoList","setup","unlisten","limit","observerDOM","store","state","currentPage","value","nextPageToken","metadata","undefined","loadVideos","dispatch","GET_VIDEOS","then","initInfinityScroll","observeCallback","render"],"mappings":"gIACOA,MAAM,gD,GACJA,MAAM,qC,SAKTC,IAAI,cACJD,MAAM,2C,mFAPV,eAWM,MAXN,EAWM,CAVJ,eAEM,MAFN,EAEM,CADJ,eAA+B,GAAlBE,OAAQ,EAAAA,QAAM,qBAGrB,EAAAC,S,iBADR,eAMM,MANN,EAIC,YAED,M,kGCLAC,E,gDACEC,EACc,qBAAXC,OAAyBA,OAAOD,qBAAuB,KAE1DE,EAAY,IAAIC,IACtB,SAASC,EACPC,GAEA,OAAO,IAAIL,GACT,SAAAM,GACEA,EAAOC,QAAQF,KAEjB,CACEG,WAAY,UAKlB,SAASC,IACP,OAAGV,IAICC,EAKFD,EAAiBK,GAAe,YAAkC,IAC5DM,EAD6BC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,mBAGpCF,EAAKR,EAAUW,IAAIF,KAIrBC,IACDb,EAAee,UAAUH,GACzBT,EAAUa,OAAOJ,GACjBD,aAfN,GAqBF,SAASM,EAAuBC,EAAaP,GAC3C,IAAMQ,EAAWT,IAEjB,OAAIS,GAIJA,EAASC,QAAQF,GACjBf,EAAUkB,IAAIH,EAAIP,GAEX,WACLQ,EAASJ,UAAUG,GACnBf,EAAUa,OAAOE,KARV,aAYI,qBAAgB,CAC7BI,WAAY,CACVC,YAAA,MAEFC,MAJ6B,WAK3B,IAAIC,EAAuB,aACrBC,EAAQ,GACRC,EAAc,iBACdC,EAAQ,iBACR9B,EAAS,gBAAS,kBAAM8B,EAAMC,MAAM/B,UAEpCgC,EAAc,eAAI,GAClB/B,EAAU,gBAAS,kBAAM+B,EAAYC,MAAQL,KAE7CM,EAAgB,gBAAS,WAAK,IAC1BC,EAAaL,EAAMC,MAAnBI,SACR,OAAOA,EAAWA,EAASD,mBAAgBE,KAGvCC,EAAa,WACjB,OAAOP,EACJQ,SAAS,OAAaC,WAAYL,EAAcD,OAChDO,MAAK,WACJR,EAAYC,OAAS,MAIrBQ,EAAqB,WACzB,IAAMrB,EAAKS,EAAYI,MAEjBS,EAAe,yDAAG,8GAChBL,IADgB,WAEnBpC,EAAQgC,MAFW,uBAGpBN,EAAWR,EAAsBC,EAAIsB,GAHjB,0BAMtBf,IANsB,2CAAH,qDASrBA,EAAWR,EAAsBC,EAAIsB,IAYvC,OATA,eAAS,wCAAC,8GACFL,IADE,OAERI,IAFQ,4CAOV,eAAgBd,GAET,CACLE,cACA7B,SACAC,cCrHN,EAAO0C,OAASA,EAED","file":"js/home.620f85f5.js","sourcesContent":["<template>\r\n  <div class=\"w-full max-w-screen-xl relative mx-auto px-6\">\r\n    <div class=\"flex items-stretch flex-wrap -m-2\">\r\n      <video-list :videos=\"videos\" />\r\n    </div>\r\n    <div\r\n      v-if=\"canLoad\"\r\n      ref=\"observerDOM\"\r\n      class=\"text-center font-bold select-none mt-8 \"\r\n    >\r\n      LOADING\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, computed, ref, onMounted, onBeforeUnmount } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ACTIONS_KEYS } from '@/store/actions'\r\nimport VideoList from '@/components/VideoList.vue'\r\n\r\nlet cachedObserver!: IntersectionObserver\r\nconst IntersectionObserver =\r\n  typeof window !== 'undefined' ? window.IntersectionObserver : null\r\n\r\nconst listeners = new Map<Element, () => void>()\r\nfunction createObserver (\r\n  handler: (entry: IntersectionObserverEntry) => void\r\n) {\r\n  return new IntersectionObserver!(\r\n    entrys => {\r\n      entrys.forEach(handler)\r\n    },\r\n    {\r\n      rootMargin: '200px'\r\n    }\r\n  )\r\n}\r\n\r\nfunction getObserver () {\r\n  if(cachedObserver) {\r\n    return cachedObserver\r\n  }\r\n\r\n  if(!IntersectionObserver) {\r\n    return undefined\r\n  }\r\n\r\n  return (\r\n    cachedObserver = createObserver(({ target, intersectionRatio }) => {\r\n      let cb!: (() => void) | undefined\r\n\r\n      if(!(cb = listeners.get(target))) {\r\n        return\r\n      }\r\n\r\n      if(intersectionRatio) {\r\n        cachedObserver.unobserve(target)\r\n        listeners.delete(target)\r\n        cb()\r\n      }\r\n    })\r\n  )\r\n}\r\n\r\nfunction listenToIntersections (el: Element, cb: () => void) {\r\n  const observer = getObserver()\r\n\r\n  if(!observer) {\r\n    return () => {}\r\n  }\r\n\r\n  observer.observe(el)\r\n  listeners.set(el, cb)\r\n\r\n  return () => {\r\n    observer.unobserve(el)\r\n    listeners.delete(el)\r\n  }\r\n}\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    VideoList\r\n  },\r\n  setup () {\r\n    let unlisten: () => void = () => {}\r\n    const limit = 10 // 最多自動載入 10 次\r\n    const observerDOM = ref<HTMLDivElement>()\r\n    const store = useStore()\r\n    const videos = computed(() => store.state.videos)\r\n\r\n    const currentPage = ref(0)\r\n    const canLoad = computed(() => currentPage.value < limit)\r\n\r\n    const nextPageToken = computed(() => {\r\n      const { metadata } = store.state\r\n      return metadata ? metadata.nextPageToken : undefined\r\n    })\r\n\r\n    const loadVideos = () => {\r\n      return store\r\n        .dispatch(ACTIONS_KEYS.GET_VIDEOS, nextPageToken.value)\r\n        .then(() => {\r\n          currentPage.value += 1\r\n        })\r\n    }\r\n\r\n    const initInfinityScroll = () => {\r\n      const el = observerDOM.value!\r\n\r\n      const observeCallback = async () => {\r\n        await loadVideos()\r\n        if(canLoad.value) {\r\n          unlisten = listenToIntersections(el, observeCallback)\r\n          return\r\n        }\r\n        unlisten()\r\n      }\r\n\r\n      unlisten = listenToIntersections(el, observeCallback)\r\n    }\r\n\r\n    onMounted(async () => {\r\n      await loadVideos()\r\n      initInfinityScroll()\r\n    })\r\n\r\n    // These  lifecycle hook registration functions can only be used synchronously during setup()\r\n    // https://v3.vuejs.org/api/composition-api.html#lifecycle-hooks\r\n    onBeforeUnmount(unlisten)\r\n\r\n    return {\r\n      observerDOM,\r\n      videos,\r\n      canLoad\r\n    }\r\n  }\r\n})\r\n</script>\r\n","\r\nimport { defineComponent, computed, ref, onMounted, onBeforeUnmount } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ACTIONS_KEYS } from '@/store/actions'\r\nimport VideoList from '@/components/VideoList.vue'\r\n\r\nlet cachedObserver!: IntersectionObserver\r\nconst IntersectionObserver =\r\n  typeof window !== 'undefined' ? window.IntersectionObserver : null\r\n\r\nconst listeners = new Map<Element, () => void>()\r\nfunction createObserver (\r\n  handler: (entry: IntersectionObserverEntry) => void\r\n) {\r\n  return new IntersectionObserver!(\r\n    entrys => {\r\n      entrys.forEach(handler)\r\n    },\r\n    {\r\n      rootMargin: '200px'\r\n    }\r\n  )\r\n}\r\n\r\nfunction getObserver () {\r\n  if(cachedObserver) {\r\n    return cachedObserver\r\n  }\r\n\r\n  if(!IntersectionObserver) {\r\n    return undefined\r\n  }\r\n\r\n  return (\r\n    cachedObserver = createObserver(({ target, intersectionRatio }) => {\r\n      let cb!: (() => void) | undefined\r\n\r\n      if(!(cb = listeners.get(target))) {\r\n        return\r\n      }\r\n\r\n      if(intersectionRatio) {\r\n        cachedObserver.unobserve(target)\r\n        listeners.delete(target)\r\n        cb()\r\n      }\r\n    })\r\n  )\r\n}\r\n\r\nfunction listenToIntersections (el: Element, cb: () => void) {\r\n  const observer = getObserver()\r\n\r\n  if(!observer) {\r\n    return () => {}\r\n  }\r\n\r\n  observer.observe(el)\r\n  listeners.set(el, cb)\r\n\r\n  return () => {\r\n    observer.unobserve(el)\r\n    listeners.delete(el)\r\n  }\r\n}\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    VideoList\r\n  },\r\n  setup () {\r\n    let unlisten: () => void = () => {}\r\n    const limit = 10 // 最多自動載入 10 次\r\n    const observerDOM = ref<HTMLDivElement>()\r\n    const store = useStore()\r\n    const videos = computed(() => store.state.videos)\r\n\r\n    const currentPage = ref(0)\r\n    const canLoad = computed(() => currentPage.value < limit)\r\n\r\n    const nextPageToken = computed(() => {\r\n      const { metadata } = store.state\r\n      return metadata ? metadata.nextPageToken : undefined\r\n    })\r\n\r\n    const loadVideos = () => {\r\n      return store\r\n        .dispatch(ACTIONS_KEYS.GET_VIDEOS, nextPageToken.value)\r\n        .then(() => {\r\n          currentPage.value += 1\r\n        })\r\n    }\r\n\r\n    const initInfinityScroll = () => {\r\n      const el = observerDOM.value!\r\n\r\n      const observeCallback = async () => {\r\n        await loadVideos()\r\n        if(canLoad.value) {\r\n          unlisten = listenToIntersections(el, observeCallback)\r\n          return\r\n        }\r\n        unlisten()\r\n      }\r\n\r\n      unlisten = listenToIntersections(el, observeCallback)\r\n    }\r\n\r\n    onMounted(async () => {\r\n      await loadVideos()\r\n      initInfinityScroll()\r\n    })\r\n\r\n    // These  lifecycle hook registration functions can only be used synchronously during setup()\r\n    // https://v3.vuejs.org/api/composition-api.html#lifecycle-hooks\r\n    onBeforeUnmount(unlisten)\r\n\r\n    return {\r\n      observerDOM,\r\n      videos,\r\n      canLoad\r\n    }\r\n  }\r\n})\r\n","import { render } from \"./Home.vue?vue&type=template&id=5878bf9f\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}